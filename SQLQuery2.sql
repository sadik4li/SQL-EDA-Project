select * from INFORMATION_SCHEMA.TABLES

select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='gold.dim_customers'

select distinct country from [gold.dim_customers]

select distinct category from [gold.dim_products]
select distinct category, subcategory from [gold.dim_products]
select distinct category, subcategory, product_name from [gold.dim_products] order by 1, 2, 3

-- first and last order date 
-- How many years of sales are available
select 
min(order_date) as first_order,
max(order_date) as last_order,
DATEDIFF(year,min(order_date),max(order_date)) as total_years
from [gold.fact_sales]

--  youngest and oldest customers
select
min(birthdate) as oldest,
DATEDIFF(year,min(birthdate),getdate()) as oldest_age,
max(birthdate) as youngest,
DATEDIFF(year,max(birthdate),getdate()) as youngest_age
from [gold.dim_customers]

-- Total sales 
select 
sum(sales_amount) as total_sales
from [gold.fact_sales]

-- How many items are sold
select 
sum(quantity) as total_quantity
from [gold.fact_sales]

-- AVG selling price 
select 
avg(price) as avg_price
from [gold.fact_sales]

-- Total number of orders
select 
count(distinct order_number) as total_orders
from [gold.fact_sales]

-- Total number of products 
select 
count(distinct product_key) as total_products
from [gold.dim_products]

-- Total number of customers
select 
count(customer_key) as total_cust
from [gold.dim_customers]

-- Total number of customers where placed order
select 
count(distinct customer_key) as total_cust
from [gold.fact_sales]

-- Report that shows all the key matrics of the business
select 'Total sales' as measure_name,sum(sales_amount) as measure_name from [gold.fact_sales]
union all
select 'Total quantity' as measure_name,sum(quantity) as measure_name from [gold.fact_sales]
union all
select 'AVG price' as measure_name,avg(price) as measure_name from [gold.fact_sales]
union all
select 'Total orders' as measure_name,count(distinct order_number) as measure_name from [gold.fact_sales]
union all
select 'Total products' as measure_name,count( product_key) as measure_name from [gold.dim_products]
union all
select 'Total customers' as measure_name,count( customer_key) as measure_name from [gold.dim_customers]

-- Total customers by Countries
select 
country,
count(customer_key) as total_customers
from [gold.dim_customers]
group by country
order by total_customers desc

-- Total customers by genders
select 
gender,
count(customer_key) as total_customers
from [gold.dim_customers]
group by gender
order by total_customers desc

-- Total products by category
select 
category,
count(product_key) as total_products 
from [gold.dim_products]
group by category
order by total_products desc

-- AVG cost for each category
select 
category,
avg(cost) as avg_cost
from [gold.dim_products]
group by category
order by avg_cost desc

-- Total revenue generated for each category
select
p.category,
sum(f.sales_amount) as total_revenue
from [gold.fact_sales] as f
left join [gold.dim_products] as p
on f.product_key = p.product_key
group by category
order by total_revenue desc

-- Total revenue generated by each customer
select
c.customer_key,
c.first_name,
c.last_name,
sum(f.sales_amount) as total_revenue
from [gold.fact_sales] as f
left join [gold.dim_customers] as c
on f.customer_key = c.customer_key
group by c.customer_key,
c.first_name,
c.last_name
order by total_revenue desc

-- Distribution of sold items across countries
select
country,
sum(f.quantity) as total_item_sold
from [gold.fact_sales] as f
left join [gold.dim_customers] as c
on f.customer_key=c.customer_key
group by country
order by total_item_sold desc

-- 5 Products that generate high revenue
select top 5
p.product_name,
sum(f.sales_amount) as total_revenue
from [gold.fact_sales] as f
left join
[gold.dim_products] as p
on f.product_key=p.product_key
group by product_name
order by total_revenue desc 

-- worst 5 Products that generate low revenue
select top 5
p.product_name,
sum(f.sales_amount) as total_revenue
from [gold.fact_sales] as f
left join
[gold.dim_products] as p
on f.product_key=p.product_key
group by product_name
order by total_revenue 

-- Top 10 customers who have generated high revenue
select top 10
c.customer_key,
c.first_name,
c.last_name,
sum(f.sales_amount) as total_revenue_generated
from [gold.fact_sales] as f 
left join
[gold.dim_customers] as c 
on f.customer_key=c.customer_key
group by c.customer_key,
c.first_name,
c.last_name
order by total_revenue_generated desc

-- 3 customer with fewer order placed 
select top 3
c.customer_key,
c.first_name,
c.last_name,
count( distinct f.order_number) as total_order_placed
from [gold.fact_sales] as f 
left join
[gold.dim_customers] as c 
on f.customer_key=c.customer_key
group by c.customer_key,
c.first_name,
c.last_name
order by total_order_placed